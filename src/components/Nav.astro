---
import { getLangFromUrl, useTranslations } from "../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const currentPath = Astro.url.pathname;

const languages = [
  { code: "en", label: "EN" },
  { code: "es", label: "ES" },
];
---

<nav
  id="navbar"
  class="w-full px-4 md:px-8 py-4 md:py-8 sticky top-0 z-50 transition-all duration-300 bg-transparent"
>
  <div class="max-w-7xl mx-auto flex items-center justify-between relative">
    <!-- Desktop Menu -->
    <div class="hidden md:flex items-center gap-8">
      <a
        href={`/${lang}/`}
        class="nav-link font-medium text-light-cyan-600 hover:text-honolulu-blue-600 hover:underline transition-colors duration-200"
      >
        {t("nav.home")}
      </a>
      <a
        href={`/${lang}/about`}
        class="nav-link font-medium text-light-cyan-600 hover:text-honolulu-blue-600 hover:underline transition-colors duration-200"
      >
        {t("nav.about")}
      </a>
    </div>

    <!-- Logo -->
    <div class="absolute left-1/2 transform -translate-x-1/2">
      <a
        href={`/${lang}/`}
        class="font-display text-3xl font-extrabold text-federal-blue-600"
      >
        <!-- Logo aquÃ­ -->
        FISIO MED
        <span class="text-honolulu-blue-600">UNERS</span>
      </a>
    </div>

    <!-- Language Selector + Mobile Toggle -->
    <div class="flex items-center gap-4 ml-auto md:ml-0">
      <!-- Language Selector -->
      <div class="hidden md:flex gap-2">
        {
          languages.map(({ code, label }) => (
            <a
              href={`/${code}${currentPath.replace(/^\/(en|es)/, "")}`}
              class={`font-roboto font-medium px-2 py-1 rounded ${code === lang ? "bg-honolulu-blue-600 text-white" : "text-federal-blue-600 hover:text-white hover:bg-honolulu-blue-600"} transition-colors duration-200`}
            >
              {label}
            </a>
          ))
        }
      </div>

      <!-- Mobile Menu Button -->
      <button
        id="menu-open"
        class="text-2xl md:hidden p-2 text-light-cyan-600 hover:text-honolulu-blue-600 transition-colors duration-200"
      >
        <i class="ti ti-menu-2"></i>
      </button>
    </div>
  </div>

  <!-- Mobile Menu -->
  <div
    id="mobile-menu"
    class="min-h-screen absolute top-0 right-0 z-[100] w-0 md:hidden hidden p-4 transition-[width] duration-300 bg-white shadow-lg overflow-hidden"
  >
    <div class="flex flex-col gap-4">
      <button
        id="menu-close"
        class="self-end p-2 text-2xl text-federal-blue-600 hover:text-honolulu-blue-600 transition-colors duration-200"
      >
        <i class="ti ti-x"></i>
      </button>

      <a
        href={`/${lang}/`}
        class="font-display font-medium text-federal-blue-600 hover:text-honolulu-blue-600"
      >
        {t("nav.home")}
      </a>
      <a
        href={`/${lang}/about`}
        class="font-display font-medium text-federal-blue-600 hover:text-honolulu-blue-600"
      >
        {t("nav.about")}
      </a>
    </div>

    <!-- Language Selector Mobile -->
    <div class="flex gap-2 mt-2">
      {
        languages.map(({ code, label }) => (
          <a
            href={`/${code}${currentPath.replace(/^\/(en|es)/, "")}`}
            class={`font-display font-medium px-2 py-1 rounded ${code === lang ? "bg-honolulu-blue-600 text-white" : "text-federal-blue-600 hover:text-white hover:bg-honolulu-blue-600"} transition-colors duration-200`}
          >
            {label}
          </a>
        ))
      }
    </div>
  </div>
</nav>

<script is:inline>
  const setupNavbarBehavior = () => {
    const toggle = document.getElementById("menu-open");
    const menu = document.getElementById("mobile-menu");
    const close = document.getElementById("menu-close");

    if (toggle && menu && close) {
      toggle.addEventListener("click", () => {
        menu.classList.remove("hidden");
        requestAnimationFrame(() => {
          menu.classList.add("w-[60%]");
        });
      });

      close.addEventListener("click", () => {
        menu.classList.remove("w-[60%]");
        setTimeout(() => {
          menu.classList.add("hidden");
        }, 300);
      });
    }

    const onScroll = () => {
      const navbar = document.getElementById("navbar");
      const navLinks = document.querySelectorAll(".nav-link");

      if (window.scrollY > 50) {
        navbar.classList.remove("bg-transparent", "md:py-8");
        navbar.classList.add("bg-light-cyan-600", "shadow-md", "md:py-4");

        navLinks.forEach((link) => {
          link.classList.remove("text-light-cyan-600");
          link.classList.add("text-federal-blue-600");
        });

        return;
      }
      navbar.classList.remove("bg-light-cyan-600", "shadow-md", "md:py-4");
      navbar.classList.add("bg-transparent", "md:py-8");

      navLinks.forEach((link) => {
        link.classList.remove("text-federal-blue-600");
        link.classList.add("text-light-cyan-600");
      });
    };

    window.addEventListener("scroll", onScroll);
    onScroll();
  };

  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", setupNavbarBehavior);
  } else {
    setupNavbarBehavior();
  }

  document.addEventListener("astro:page-load", setupNavbarBehavior);
</script>
