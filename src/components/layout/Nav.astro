---
import { useTranslations } from "@/i18n/utils";
import LanguageSelector from "@/components/ui/LanguageSelector.astro";
import { PUBLIC_BACKEND_URL } from "astro:env/client";
import { DEFAULT_LOCALE, type Locale } from "@/i18n/config";

const { isSubPage = false } = Astro.props;

const lang: Locale = Astro.currentLocale || DEFAULT_LOCALE;
const t = useTranslations(lang);
const currentPath = Astro.url.pathname;

const languages = [
  { code: "es", label: "ES" },
  { code: "en", label: "EN" },
];

const navLinkClasses =
  "nav-link font-medium hover:text-purpureus-800 hover:underline transition-colors duration-200";

const navbarInitialClasses = isSubPage
  ? "bg-light-cyan-800 shadow-md py-4 md:py-4"
  : "bg-transparent py-4 md:py-8";

const linkInitialClasses = isSubPage
  ? "text-purpureus-600"
  : "text-light-cyan-800";
---

<nav
  id="navbar"
  class:list={[
    "w-full px-4 md:px-8 sticky top-0 z-50 transition-all duration-300",
    navbarInitialClasses,
  ]}
>
  <div class="max-w-7xl mx-auto flex items-center justify-between relative">
    <div class="hidden lg:flex lg:items-center gap-8">
      <a href={`/${lang}/`} class:list={[navLinkClasses, linkInitialClasses]}>
        {t("nav.home")}
      </a>
      <a
        href={`/${lang}/about`}
        class:list={[navLinkClasses, linkInitialClasses]}
      >
        {t("nav.about")}
      </a>
    </div>

    <div class="absolute lg:left-1/2 transform lg:-translate-x-1/2">
      <a
        href={`/${lang}/`}
        class="font-display text-3xl font-extrabold text-purpureus-600"
      >
        FISIO <span class="text-honolulu-blue-600">UNERS</span>
      </a>
    </div>

    <div class="flex items-center gap-2 lg:gap-4 ml-auto lg:ml-0">
      <LanguageSelector
        languages={languages}
        currentLang={lang}
        currentPath={currentPath}
        initialTextColor={linkInitialClasses}
      />
      <a
        href={`${PUBLIC_BACKEND_URL}/login/`}
        class:list={[navLinkClasses, linkInitialClasses]}
      >
        {t("nav.login")}
        <i class="ti ti-login-2"></i>
      </a>
      <button
        id="menu-open"
        class:list={[
          "flex items-center text-2xl lg:hidden p-2 hover:text-honolulu-blue-600 transition-colors duration-200",
          linkInitialClasses,
        ]}
      >
        <i class="ti ti-grid-dots"></i>
      </button>
    </div>
  </div>

  <div
    id="mobile-menu"
    class="min-h-screen fixed top-0 right-0 z-[100] w-0 lg:hidden hidden p-4 transition-[width] duration-300 bg-light-cyan-600 shadow-lg overflow-hidden"
  >
    <div class="flex flex-col gap-4">
      <button
        id="menu-close"
        class="self-end p-2 text-2xl md:text-3xl text-purpureus-600 hover:text-honolulu-blue-600"
      >
        <i class="ti ti-x"></i>
      </button>
      <a
        href={`/${lang}/`}
        class="font-display font-medium md:text-2xl text-purpureus-600 hover:text-honolulu-blue-600"
      >
        {t("nav.home")}
      </a>
      <a
        href={`/${lang}/about`}
        class="font-display font-medium md:text-2xl text-purpureus-600 hover:text-honolulu-blue-600"
      >
        {t("nav.about")}
      </a>
    </div>
  </div>
</nav>

<style>
  @reference "../../styles/global.css";

  #navbar.navbar-scrolled {
    @apply bg-light-cyan-600 shadow-md py-4 md:py-4;
  }

  #navbar.navbar-scrolled .nav-link,
  #navbar.navbar-scrolled #menu-open {
    @apply text-purpureus-600;
  }

  #navbar.navbar-scrolled :global(#language-selector-button) {
    @apply text-purpureus-600 border-purpureus-600 md:border-purpureus-600;
  }
</style>

<script define:vars={{ isSubPage }}>
  const setupNavbar = () => {
    const navbar = document.getElementById("navbar");
    const menuOpenBtn = document.getElementById("menu-open");
    const menuCloseBtn = document.getElementById("menu-close");
    const mobileMenu = document.getElementById("mobile-menu");
    const body = document.body;

    const showMenu = () => {
      mobileMenu?.classList.remove("hidden");
      body.style.overflow = "hidden";
      requestAnimationFrame(() => {
        mobileMenu?.classList.add("w-[60%]", "md:w-[40%]");
      });
    };

    const hideMenu = () => {
      mobileMenu?.classList.remove("w-[60%]", "md:w-[40%]");
      body.style.overflow = "";
      setTimeout(() => {
        mobileMenu?.classList.add("hidden");
      }, 300);
    };

    if (menuOpenBtn && menuCloseBtn && mobileMenu) {
      menuOpenBtn.addEventListener("click", showMenu);
      menuCloseBtn.addEventListener("click", hideMenu);
    }

    const handleScroll = () => {
      if (!navbar) return;
      if (window.scrollY > 50) {
        navbar.classList.add("navbar-scrolled");
      } else {
        navbar.classList.remove("navbar-scrolled");
      }
    };

    if (!isSubPage) {
      window.addEventListener("scroll", handleScroll);
      handleScroll();
    }
  };

  document.addEventListener("astro:page-load", setupNavbar);
</script>
