---
import { getLangFromUrl, useTranslations } from "../../i18n/utils";
import LanguagueSelector from "../ui/LanguagueSelector.astro";
import { PUBLIC_BACKEND_URL } from "astro:env/client";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const currentPath = Astro.url.pathname;

const languages = [
  { code: "es", label: "ES" },
  { code: "en", label: "EN" },
];
---

<!-- TODO: Change the top offset of the navbar based on the header height -->
<nav
  id="navbar"
  class="w-full px-4 md:px-8 py-4 md:py-8 sticky top-12 md:top-10 z-50 transition-all duration-300 bg-transparent"
>
  <div class="max-w-7xl mx-auto flex items-center justify-between relative">
    <!-- Desktop Menu -->
    <div class="hidden lg:flex lg:items-center gap-8">
      <a
        href={`/${lang}/`}
        class="nav-link font-medium text-light-cyan-600 hover:text-honolulu-blue-600 hover:underline transition-colors duration-200"
      >
        {t("nav.home")}
      </a>
      <a
        href={`/${lang}/about`}
        class="nav-link font-medium text-light-cyan-600 hover:text-honolulu-blue-600 hover:underline transition-colors duration-200"
      >
        {t("nav.about")}
      </a>
    </div>

    <!-- Logo -->
    <div class="absolute lg:left-1/2 transform lg:-translate-x-1/2">
      <a
        href={`/${lang}/`}
        class="font-display text-3xl font-extrabold text-federal-blue-600"
      >
        <!-- Logo aquÃ­ -->
        FISIO MED
        <span class="text-honolulu-blue-600">UNERS</span>
      </a>
    </div>

    <!-- Language Selector + Mobile Toggle -->
    <div class="flex items-center gap-2 lg:gap-4 ml-auto lg:ml-0">
      <!-- Language Selector -->
      <div class="flex gap-2">
        <LanguagueSelector
          languages={languages}
          currentLang={lang}
          currentPath={currentPath}
        />
      </div>

      <a
        href={`${PUBLIC_BACKEND_URL}/login/`}
        class="nav-link font-medium text-light-cyan-600 hover:text-honolulu-blue-600 hover:underline transition-colors duration-200"
      >
        {t("nav.login")}
        <i class="ti ti-login-2"></i>
      </a>

      <!-- Mobile Menu Button -->
      <button
        id="menu-open"
        class="flex items-center text-2xl lg:hidden p-2 text-light-cyan-600 hover:text-honolulu-blue-600 transition-colors duration-200"
      >
        <i class="ti ti-grid-dots"></i>
      </button>
    </div>
  </div>

  <!-- Mobile Menu -->
  <div
    id="mobile-menu"
    class="min-h-screen absolute top-0 right-0 z-[100] w-0 lg:hidden hidden p-4 transition-[width] duration-300 bg-light-cyan-600 shadow-lg overflow-hidden"
  >
    <div class="flex flex-col gap-4">
      <button
        id="menu-close"
        class="self-end p-2 text-2xl md:text-3xl text-federal-blue-600 hover:text-honolulu-blue-600 transition-colors duration-200"
      >
        <i class="ti ti-x"></i>
      </button>

      <a
        href={`/${lang}/`}
        class="font-display font-medium md:text-2xl text-federal-blue-600 hover:text-honolulu-blue-600"
      >
        {t("nav.home")}
      </a>
      <a
        href={`/${lang}/about`}
        class="font-display font-medium md:text-2xl text-federal-blue-600 hover:text-honolulu-blue-600"
      >
        {t("nav.about")}
      </a>
    </div>
  </div>
</nav>

<script is:inline>
  const setupNavbarBehavior = () => {
    const toggle = document.getElementById("menu-open");
    const menu = document.getElementById("mobile-menu");
    const close = document.getElementById("menu-close");
    const navbar = document.getElementById("navbar");
    const navLinks = document.querySelectorAll(".nav-link");
    const languageSelector = document.getElementById("language-selector");
    const body = document.querySelector("body");

    const showMenu = () => {
      menu?.classList.remove("hidden");
      body?.classList.add("overflow-hidden");
      requestAnimationFrame(() => {
        menu?.classList.add("w-[60%]", "md:w-[40%]");
      });
    };

    const hideMenu = () => {
      menu?.classList.remove("w-[60%]", "md:w-[40%]");
      body?.classList.remove("overflow-hidden");
      setTimeout(() => {
        menu?.classList.add("hidden");
      }, 300);
    };

    const updateNavbarOnScroll = () => {
      const isScrolled = window.scrollY > 50;

      toggle?.classList.toggle("text-light-cyan-600", !isScrolled);
      toggle?.classList.toggle("text-federal-blue-600", isScrolled);

      navbar?.classList.toggle("bg-transparent", !isScrolled);
      navbar?.classList.toggle("md:py-8", !isScrolled);
      navbar?.classList.toggle("py-4", !isScrolled);
      navbar?.classList.toggle("bg-light-cyan-600", isScrolled);
      navbar?.classList.toggle("shadow-md", isScrolled);
      navbar?.classList.toggle("md:py-4", isScrolled);
      navbar?.classList.toggle("py-2", isScrolled);

      languageSelector.classList.toggle("text-light-cyan-600", !isScrolled);
      languageSelector.classList.toggle("text-federal-blue-600", isScrolled);

      navLinks.forEach((link) => {
        link.classList.toggle("text-light-cyan-600", !isScrolled);
        link.classList.toggle("text-federal-blue-600", isScrolled);
      });
    };

    if (toggle && menu && close) {
      toggle.addEventListener("click", showMenu);
      close.addEventListener("click", hideMenu);
    }

    window.addEventListener("scroll", updateNavbarOnScroll);
    updateNavbarOnScroll();
  };

  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", setupNavbarBehavior);
  } else {
    setupNavbarBehavior();
  }

  document.addEventListener("astro:page-load", setupNavbarBehavior);
</script>
